#!/bin/bash
#
# An hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.

# We do a simple check to make sure node exists
if command -v node &> /dev/null; then
  # Very rudimentary way to check if we have the node packages we need
  # This could potentially fail since we don't actually check what packages are installed
  if [ -d "node_modules" ]; then
    SOURCE=${BASH_SOURCE[0]}
    while [ -L "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
      DIR=$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )
      SOURCE=$(readlink "$SOURCE")
      [[ $SOURCE != /* ]] && SOURCE=$DIR/$SOURCE # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
    done
    DIR=$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )

    node "$DIR/pre-commit.js"
  else
    echo "Pre-commit hook cannot run because the Node modules have not been installed."
  fi
else
  echo "Pre-commit hook cannot run because Node is not installed"
fi
